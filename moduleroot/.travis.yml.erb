---
sudo: false
dist: trusty
language: ruby
cache: bundler
<%- if !@configs.nil? and @configs.has_key?('addons') -%>
addons:
  <%- if @configs['addons'].has_key?('apt') -%>
  apt:
    <%- if @configs['addons']['apt'].has_key?('sources') -%>
    sources:
      <%- @configs['addons']['apt']['sources'].each do |x| -%>
      - <%= x %>
      <%- end -%>
    <%- end -%>
    <%- if @configs['addons']['apt'].has_key?('packages') -%>
    packages:
      <%- @configs['addons']['apt']['packages'].each do |x| -%>
      - <%= x %>
      <%- end -%>
    <%- end -%>
  <%- end -%>
<%- end -%>
before_install:
  - bundle -v
  - rm Gemfile.lock || true
  - gem update --system
  - gem update bundler
  - gem --version
  - bundle -v
script:
  - 'bundle exec rake $CHECK'
matrix:
  fast_finish: true
  include:
<% if @configs['docker_sets'] -%>
<%   @configs['docker_sets'].each do |set| -%>
<%     job = @configs['docker_defaults'].merge(set['options'] || {}) -%>
  - rvm: <%= job['rvm'] %>
<%     job.keys.sort.each do |k| -%>
<%     next if k == 'rvm' -%>
    <%= k %>: <%= job[k].gsub(/@@SET@@/, set['set']) %>
<%     end -%>
<%   end -%>
<% end -%>
<% @configs['includes'].each do |include| -%>
  - rvm: <%= include['rvm'] %>
<%   include.keys.sort.each do |k| -%>
<%     next if k == 'rvm' -%>
    <%= k %>: <%= include[k] %>
<%   end -%>
<% end -%>
<% if @configs['extras'] -%>
<%   @configs['extras'].each do |extra| -%>
  - rvm: <%= extra['rvm'] %>
<%     extra.keys.sort.each do |k| -%>
<%       next if k == 'rvm' -%>
    <%= k %>: <%= extra[k] %>
<%     end -%>
<%   end -%>
<% end -%>
<% if @configs['allow_failures'] -%>
  allow_failures:
<%   @configs['allow_failures'].each do |allow_failure| -%>
    - rvm: <%= allow_failure['rvm'] %>
<%     allow_failure.keys.sort.each do |k| -%>
<%       next if k == 'rvm' -%>
      <%= k %>: <%= job[k] %>
<%     end -%>
<%   end -%>
<% end -%>
branches:
  only:
  - master
  - /^v\d/
notifications:
  email: false
deploy:
  - provider: puppetforge
    user: puppet
    password:
      secure: "<%= @configs['secure'] -%>"
    on:
      tags: true
      # all_branches is required to use tags
      all_branches: true
      # Only publish the build marked with "DEPLOY_TO_FORGE"
      condition: "$DEPLOY_TO_FORGE = yes"
  - provider: releases
    api_key: 
      secure: "GITHUB OAUTH TOKEN"
    file_glob: true
    file: "pkg/*.tar.gz"
    skip_cleanup: true
    on:
      tags: true
      condition: "$DEPLOY_TO_FORGE = yes"
